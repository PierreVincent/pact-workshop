buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

plugins {
    id "com.wiredforcode.spawn" version "0.8.2"
    id "au.com.dius.pact" version "4.1.7"
}

import com.wiredforcode.gradle.spawn.*

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

def leaderboardServiceVersion = '1.0.0'

bootJar {
    archiveBaseName = 'pact-workshop-leaderboard-service'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "io.pvincent.pactworkshop.Application"

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:2.2.10.RELEASE")
    testCompile('org.springframework.boot:spring-boot-starter-test:2.2.10.RELEASE')
    testCompile("junit:junit")
}

task startProvider(type: SpawnProcessTask, dependsOn: 'assemble') {
    command "java -Dspring.profiles.active=test -jar build/libs/pact-workshop-leaderboard-service.jar"
    ready 'Started Application'
}

task stopProvider(type: KillProcessTask) {}

pact {
    serviceProviders {
        'leaderboard-service' {
            providerVersion = { leaderboardServiceVersion }

            startProviderTask = startProvider
            terminateProviderTask = stopProvider

            protocol = 'http'
            host = 'localhost'
            port = 8081
            path = '/'

            hasPactWith('gameService') {
                pactSource = file('pacts/game-service-leaderboard-service.json')
            }

//            hasPactsFromPactBroker('',
//                    authentication: ['Bearer', '']
//            )
        }
    }
}